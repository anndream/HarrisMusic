package org.harris

import org.harris.Interval.*

enum class ScalePattern(private val pattern: Array<Interval>) {
    Ionian(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    Dorian(
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh
        )
    ),
    Phrygian(
        arrayOf(
            Unison,
            MinorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSixth,
            MinorSeventh
        )
    ),
    Lydian(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            AugmentedFourth,
            PerfectFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    Mixolydian(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh
        )
    ),
    Aolian(
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSixth,
            MinorSeventh
        )
    ),
    Locrian(
        arrayOf(
            Unison,
            MinorSecond,
            MinorThird,
            PerfectFourth,
            DiminishedFifth,
            MinorSixth,
            MinorSeventh
        )
    ),
    MajorPentatonic(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFifth,
            MajorSixth
        )
    ),
    MinorPentatonic(
        arrayOf(
            Unison,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSeventh
        )
    ),
    Blues(
        arrayOf(
            Unison,
            MinorThird,
            PerfectFourth,
            DiminishedFifth,
            PerfectFifth,
            MinorSeventh
        )
    ),
    HarmonicMinor
        (
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSixth,
            MajorSeventh
        )
    ),
    MelodicMinor(
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    DorianFlat2(
        arrayOf(
            Unison,
            MinorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh
        )
    ),
    NeapolitanMinor(
        arrayOf(
            Unison,
            MinorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSixth,
            MajorSeventh
        )
    ),
    LydianAugmented(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            AugmentedFourth,
            AugmentedFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    LydianDominant(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            AugmentedFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh
        )
    ),
    MixolydianFlat6(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            MinorSixth,
            MinorSeventh
        )
    ),
    Bebop(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh,
            MajorSeventh
        )
    ),
    LocrianSharp2(
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            DiminishedFifth,
            MinorSixth,
            MinorSeventh
        )
    ),
    AlteredDominant(
        arrayOf(
            Unison,
            MinorSecond,
            AugmentedSecond,
            MajorThird,
            DiminishedFifth,
            AugmentedFifth,
            MinorSeventh
        )
    ),
    HalfWholeDiminished(
        arrayOf(
            Unison,
            MinorSecond,
            MinorThird,
            MajorThird,
            AugmentedFourth,
            PerfectFifth,
            MajorSixth,
            MinorSeventh
        )
    ),
    WholeTone(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            DiminishedFifth,
            AugmentedFifth,
            MinorSeventh
        )
    ),
    MajorSixthDiminishedScale(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            AugmentedFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    MinorSixthDiminishedScale(
        arrayOf(
            Unison,
            MajorSecond,
            MinorThird,
            PerfectFourth,
            PerfectFifth,
            AugmentedFifth,
            MajorSixth,
            MajorSeventh
        )
    ),
    DominantDiminishedScale(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            PerfectFifth,
            AugmentedFifth,
            MinorSeventh,
            MajorSeventh
        )
    ),
    DominantFlat5DiminishedScale(
        arrayOf(
            Unison,
            MajorSecond,
            MajorThird,
            PerfectFourth,
            DiminishedFifth,
            AugmentedFifth,
            MinorSeventh,
            MajorSeventh
        )
    );

    fun createScale(root: Note) : Scale {
        return Scale(this, root)
    }

    fun notes(root: Note) : Array<Note> {
        return pattern.map{ it.transpose(root) }.toTypedArray()
    }
}

